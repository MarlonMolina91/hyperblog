Git add .
deja en el start los archivos de Git

Git commit -m "mensaje del cambio"
manda el archivo al master

Git log 
revisa los registros de cambios

git checkout tag"el tag es el numero largo con letras" archivo
con este comando trae temporalmente el estado sin los cambios posteriores

git reset tag hard
este comando borra los demas logs y deja el tag del log para siempre

git status 
revisa que hay añadido o no antes del commit

git rm --cached: Elimina los archivos del área de Staging y del próximo commit pero los mantiene en nuestro disco duro.
git rm --force: Elimina los archivos de Git y del disco duro. Git siempre guarda todo, por lo que podemos acceder al registro de la existencia de los archivos, de modo que podremos recuperarlos si es necesario (pero debemos usar comandos más avanzados).

git reset --soft: Borramos todo el historial y los registros de Git pero guardamos los cambios que tengamos en Staging, así podemos aplicar las últimas actualizaciones a un nuevo commit.
git reset --hard: Borra todo. Todo todito, absolutamente todo. Toda la información de los commits y del área de staging se borra del historial.

git clone URL 
crea base de datos los trae de la URL o del servidor

git push 
manda todo el commit al servidor

git fetch

git merge

git pull

git commit -am
sube los cambios de archivos que ya estaban añadidas

git brench crea una rama
